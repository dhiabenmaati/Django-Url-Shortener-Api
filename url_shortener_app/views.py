from django.http import HttpResponseRedirect
from rest_framework.response import Response
from url_shortener_app.models import UrlModel
from url_shortener_app.serializers import UrlSerializer
from rest_framework.decorators import api_view



## Create Url - url/create/
@api_view(['GET'])
def urlList (request):
    urls = UrlModel.objects.all()
    serializer = UrlSerializer (urls, many=True)
    return Response (serializer.data)

## Create Url - url/create-link/
## JSON DATA EXAMPLE ## shrtened_ur is unique ## {"title": "test2", "description": "test2", "main_url": "https://google.com", "shrtened_ur": "sdqsdsdqs", "total_views": 0, "edit_password": 54551215}
@api_view(['POST'])
def urlCreate ( request):
    serializer = UrlSerializer(data=request.data)
    if serializer. is_valid ():
        serializer. save()
        return Response('saved')
        
    return Response('Please check your data')



## Delete Url - url/delete-link/<auto-generated-password>
@api_view(['DELETE'])
def urlDelete (request, pk):
    url = UrlModel.objects.get(edit_password=pk)
    url.delete()

    return Response ('Deleted Record')


## Url Redirection - url/redirect/<shortened-url>
@api_view(['GET'])
def urlRedirect(request, pk):
    

    if UrlModel.objects.filter(shrtened_ur=pk).exists():

        url = UrlModel.objects.get(shrtened_ur=pk)
        serializer = UrlSerializer (url, many=False)  
        return HttpResponseRedirect(serializer.data['main_url'])
    
    else:
        return Response ('Nothing Found Here')

